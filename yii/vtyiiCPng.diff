Index: web/CSort.php
===================================================================
--- web/CSort.php	(revisión: 198)
+++ web/CSort.php	(copia de trabajo)
@@ -223,7 +223,7 @@
 		else
 		{
 			if($this->modelClass!==null)
-				$schema=CActiveRecord::model($this->modelClass)->getDbConnection()->getSchema();
+				$schema='Entity';
 			$orders=array();
 			foreach($directions as $attribute=>$descending)
 			{
@@ -241,9 +241,9 @@
 					if(isset($schema))
 					{
 						if(($pos=strpos($attribute,'.'))!==false)
-							$attribute=$schema->quoteTableName(substr($attribute,0,$pos)).'.'.$schema->quoteColumnName(substr($attribute,$pos+1));
+							$attribute='"'.substr($attribute,0,$pos).'"."'.substr($attribute,$pos+1).'"';
 						else
-							$attribute=CActiveRecord::model($this->modelClass)->getTableAlias(true).'.'.$schema->quoteColumnName($attribute);
+							$attribute=' "'.$attribute.'"';
 					}
 					$orders[]=$descending?$attribute.' DESC':$attribute;
 				}
@@ -313,7 +313,7 @@
 		else if(is_string($definition))
 			$attribute=$definition;
 		if($this->modelClass!==null)
-			return CActiveRecord::model($this->modelClass)->getAttributeLabel($attribute);
+			return EActiveResource::model($this->modelClass)->getAttributeLabel($attribute);
 		else
 			return $attribute;
 	}
@@ -407,7 +407,7 @@
 		if($this->attributes!==array())
 			$attributes=$this->attributes;
 		else if($this->modelClass!==null)
-			$attributes=CActiveRecord::model($this->modelClass)->attributeNames();
+			$attributes=EActiveResource::model($this->modelClass)->attributeNames();
 		else
 			return false;
 		foreach($attributes as $name=>$definition)
@@ -419,7 +419,7 @@
 			}
 			else if($definition==='*')
 			{
-				if($this->modelClass!==null && CActiveRecord::model($this->modelClass)->hasAttribute($attribute))
+				if($this->modelClass!==null && EActiveResource::model($this->modelClass)->hasAttribute($attribute))
 					return $attribute;
 			}
 			else if($definition===$attribute)
Index: web/CActiveDataProvider.php
===================================================================
--- web/CActiveDataProvider.php	(revisión: 198)
+++ web/CActiveDataProvider.php	(copia de trabajo)
@@ -72,9 +72,9 @@
 		if(is_string($modelClass))
 		{
 			$this->modelClass=$modelClass;
-			$this->model=CActiveRecord::model($this->modelClass);
+			$this->model=EActiveResource::model($this->modelClass);
 		}
-		else if($modelClass instanceof CActiveRecord)
+		else if($modelClass instanceof EActiveResource)
 		{
 			$this->modelClass=get_class($modelClass);
 			$this->model=$modelClass;
@@ -126,11 +126,11 @@
 
 		if(($pagination=$this->getPagination())!==false)
 		{
-			$pagination->setItemCount($this->getTotalItemCount());
+			$pagination->setItemCount($this->model->getTotalItemCount());
 			$pagination->applyLimit($criteria);
 		}
 
-		$baseCriteria=$this->model->getDbCriteria(false);
+		$baseCriteria=$this->model->getCriteria(false);
 
 		if(($sort=$this->getSort())!==false)
 		{
@@ -139,16 +139,16 @@
 			{
 				$c=clone $baseCriteria;
 				$c->mergeWith($criteria);
-				$this->model->setDbCriteria($c);
+				$this->model->setCriteria($c);
 			}
 			else
-				$this->model->setDbCriteria($criteria);
+				$this->model->setCriteria($criteria);
 			$sort->applyOrder($criteria);
 		}
 
-		$this->model->setDbCriteria($baseCriteria!==null ? clone $baseCriteria : null);
-		$data=$this->model->findAll($criteria);
-		$this->model->setDbCriteria($baseCriteria);  // restore original criteria
+		$this->model->setCriteria($baseCriteria!==null ? clone $baseCriteria : null);
+		$data=$this->model->findAll($criteria);              
+		$this->model->setCriteria($baseCriteria);  // restore original criteria
 		return $data;
 	}
 
@@ -158,13 +158,13 @@
 	 */
 	protected function fetchKeys()
 	{
-		$keys=array();
-		foreach($this->getData() as $i=>$data)
-		{
-			$key=$this->keyAttribute===null ? $data->getPrimaryKey() : $data->{$this->keyAttribute};
-			$keys[$i]=is_array($key) ? implode(',',$key) : $key;
-		}
-		return $keys;
+//		$keys=array();
+//		foreach($this->getData() as $i=>$data)
+//		{
+//			$key=$this->keyAttribute===null ? $data->getPrimaryKey() : $data->{$this->keyAttribute};
+//			$keys[$i]=is_array($key) ? implode(',',$key) : $key;
+//		}
+		return $this->model->getKeys();
 	}
 
 	/**
@@ -173,11 +173,12 @@
 	 */
 	protected function calculateTotalItemCount()
 	{
-		$baseCriteria=$this->model->getDbCriteria(false);
+		$baseCriteria=$this->model->getCriteria(false);
 		if($baseCriteria!==null)
 			$baseCriteria=clone $baseCriteria;
 		$count=$this->model->count($this->getCriteria());
-		$this->model->setDbCriteria($baseCriteria);
+		$this->model->setCriteria($baseCriteria);
+		$count=$this->model->getTotalItemCount();
 		return $count;
 	}
 }
